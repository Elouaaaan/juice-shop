name: Security CI

on:
  push:
    branches: [ "master" ]
  pull_request:

permissions:
  contents: read
  security-events: write

jobs:
  prepare:
    name: Prepare environment
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.node.outputs.node-version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        id: node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies (generate lockfile)
        run: |
          # use npm ci if package-lock.json already exists, otherwise npm install
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

  sca-dependency-check:
    name: SCA - OWASP Dependency-Check
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Ensure dependencies installed
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
      - name: Run OWASP Dependency-Check
        uses: OWASP/dependency-check-action@v2
        with:
          scan: '.'
          format: 'ALL'
          out: 'dependency-check-report'
      - name: Upload Dependency-Check reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: dependency-check-report

  sast-semgrep:
    name: SAST - Semgrep
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python (Semgrep runs under Python)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install semgrep
        run: pip install semgrep
      - name: Run Semgrep (rules: default + javascript)
        run: |
          mkdir -p semgrep-reports
          semgrep --config auto --json --output semgrep-reports/semgrep-report.json .
          # also export a simple text summary
          semgrep --config auto --metrics --summary > semgrep-reports/semgrep-summary.txt || true
      - name: Upload Semgrep reports
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-reports
          path: semgrep-reports

  sast-codeql:
    name: SAST - CodeQL Analysis
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: 'security'
      - name: Collect CodeQL SARIF (if produced)
        if: always()
        run: |
          mkdir -p codeql-reports || true
          # the action uploads results to GitHub code scanning automatically; but we also attempt to collect local SARIFs if any
          find . -type f -name '*.sarif' -maxdepth 4 -exec cp {} codeql-reports/ \; || true
      - name: Upload CodeQL reports
        uses: actions/upload-artifact@v4
        with:
          name: codeql-reports
          path: codeql-reports

  secret-scan-gitleaks:
    name: Secret scanning - Gitleaks
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Gitleaks
        uses: zricethezav/gitleaks-action@v1
        with:
          args: detect --source . --report-format json --report-path gitleaks-report.json || true
      - name: Save Gitleaks report
        run: mkdir -p gitleaks-reports && mv gitleaks-report.json gitleaks-reports/ || true
      - name: Upload Gitleaks reports
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-reports
          path: gitleaks-reports

